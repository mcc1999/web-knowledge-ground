{
  "version": 3,
  "sources": ["../../../contentlayer.config.js", "../../../remark-mdx-meta-to-props.mjs"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\nimport remarkMdxMetaToProps from './remark-mdx-meta-to-props.mjs'\n\nexport const Framework = defineDocumentType(() => ({\n  name: 'Framework',\n  filePathPattern: `**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      description: 'The title of the post',\n      required: true,\n    },\n    date: {\n      type: 'date',\n      description: 'The date of the post',\n      required: false,\n    },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: (post) => `src/framework/${post._raw.flattenedPath}`,\n    },\n  },\n}))\n\nexport default makeSource({\n  contentDirPath: 'src/framework',\n  documentTypes: [Framework],\n  mdx: {\n    cwd: process.cwd(),\n    remarkPlugins: [\n\n    ]\n  }\n})", "import { Parser } from 'acorn'\nimport jsx from 'acorn-jsx'\nimport { visit } from 'unist-util-visit'\n\nconst parser = Parser.extend(jsx())\n/**\n * Code fence only pass code and language, this plugin can pass custom properties\n */\n/** @type {import('unified').Plugin<[], import('mdast').Root>} */\nexport default function remarkMdxMetaToProps() {\n  return (tree) => {\n    visit(tree, 'code', (node, index, parent) => {\n      console.log('node', node);\n      if (!node.meta) return\n      const code = JSON.stringify(`${node.value}`)\n      const value = `<code className=\"language-${node.lang}\" ${node.meta}>{${code}}</code>`\n      const estree = parser.parse(value, { ecmaVersion: 'latest' })\n      console.log('estree', estree);\n      \n      parent.children[index] = { type: 'mdxFlowExpression', value, data: { estree } }\n    })\n  }\n}\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;;;ACA/C,SAAS,cAAc;AACvB,OAAO,SAAS;AAChB,SAAS,aAAa;AAEtB,IAAM,SAAS,OAAO,OAAO,IAAI,CAAC;;;ADD3B,IAAM,YAAY,mBAAmB,OAAO;AAAA,EACjD,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,iBAAiB,KAAK,KAAK;AAAA,IAChD;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,SAAS;AAAA,EACzB,KAAK;AAAA,IACH,KAAK,QAAQ,IAAI;AAAA,IACjB,eAAe,CAEf;AAAA,EACF;AACF,CAAC;",
  "names": []
}
